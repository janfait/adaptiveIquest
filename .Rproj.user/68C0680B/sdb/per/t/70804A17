{
    "contents" : "###################\n# DISTRIBUTION\n#\n#  @q - [povinna, text] promenna otazky, jako napriklad \"q1\", \"s10\" apod.\n#  @rid - [povinna, integer] cislo vyzkumu\n#  @selected - [volitelna, integer/string] kterou hodnotu respondent vybral napr. 1,2,666 , v pripade multiple choice pak c(1,2,3)\n#  @choices - [volitelan,integer] jake hodnoty ma na vyber\n#  @mult - [volitelna,logical] je otazka multiple choice? napr. TRUE FALSE\n#  @dir - [povinna,text] nazev souboru v adresari /home/opencpu/data/#####.csv kam se uklada rozdeleni\n#  @dirv - [povinna,text] nazev souboru v adresari /home/opencpu/data/#####_v.csv  kam se uklada rozptyl\n#\n#  Ex : distribution(rid=10,q=\"q1\",mult=T,selected=c(\"1\",\"2\"), choices=c(1,2,3,4,5,6,7),dir=\"C:/Users/fait/Desktop/test.csv\",dirv=\"C:/Users/fait/Desktop/testv.csv\")\n##################\n\ndistribution <- function(rid=NULL,q=NULL,choices=NULL,selected=NULL,demo=NULL,mult=F,dir=NULL, dirv=NULL){\n  \n  if(is.null(demo)){\n    demo=0\n  }\n  #rid and q are essential, we cannot do anything without it\n  if(is.null(rid)|is.null(q)){\n    er <- list(type=1,message=\"You have not provided a rid and q parameter\")\n    return(er)\n  }else{\n    if(mult){\n      par<-\"m\"\n    }else{\n      par<-\"s\"\n    }\n    #parse a filename from rid and question number\n    if(is.null(dir)|is.null(dirv)){\n      fname <- paste(\"/home/opencpu/data\",rid,\"_\",q,\"_\",par,\".csv\",sep=\"\")\n      fname_v <- paste(\"/home/opencpu/data\",rid,\"_\",q,\"_\",par,\"variance.csv\",sep=\"\")\n    }else{\n      fname <-dir\n      fname_v <- dirv\n    }\n  }\n  #if no selection is provided, we read the current file without writing in it\n  if(is.null(selected)){\n    #check if data.frame has been stored before\n    if(file.exists(fname)){\n      d<-read.table(fname,header=T,sep=\";\",stringsAsFactors=F)\n    }else{\n      er <- list(type=2,message=\"You are trying to read from a file that does not exist\")\n      return(er)\n    }\n    #selection is provided\n  }else{\n    #parse text\n    choices <- eval(parse(text=choices))\n    selected <- eval(parse(text=selected))\n    \n    if(!mult & length(selected)>1){\n      er<-list(type=3,message=\"You claim this is single choice, yet selected has more items\")\n      return(er)\n    }\n    #check if data.frame has been stored before\n    if(file.exists(fname)){\n      d<-read.table(fname,header=T,sep=\";\",stringsAsFactors=F)\n    }else{\n      d<-data.frame()\n    }\n    #is selected a multiple choice/single choice\n    if(mult){\n      #define column names\n      choice_length <- c(1:length(choices))\n      cnames <- c(sapply(choice_length,function(x) paste(q,\"_\",x,sep=\"\")),\"demo\")\n      row <- c(sapply(choices,function(x) ifelse(x %in% selected,x,0)),demo)\n      #rbind new entry with the old\n      d<-rbind(d,row)\n      colnames(d)<-cnames\n    }else{\n      #the same as above but without matching\n      cnames <- c(paste(q,sep=\"\"),\"demo\")\n      row <- c(selected,demo)\n      #rbind new entry with the old\n      d<-rbind(d,row)\n      names(d)<-cnames\n    }\n  }\n  #output variables multiple/single\n  if(mult){\n    dist<-sapply(choices,function(x) length(d[d==x]))\n    if(is.null(demo)){\n      demodist<-0\n    }else{\n      demodist<-0\n    }\n    d[,choice_length]<-apply(d[,choice_length],2,as.numeric)\n    mn <- apply(d[,choice_length],2,mean)\n    sd <- apply(d[,choice_length],2,sd)\n    v <- apply(d[,choice_length],2,var)\n    \n  }else{\n    dist<-as.data.frame(table(label=d[,q]),responseName=\"freq\",stringsAsFactors=F)\n    dist$pct <- round(100*(dist$freq/nrow(d)),2)\n    if(is.null(demo)){\n      demodist<-0\n    }else{\n      demodist<-as.data.frame(table(label=d[,q],demo=d[,\"demo\"]),responseName=\"freq\",stringsAsFactors=F)\n      demodist$pct <- round(100*(demodist$freq/nrow(d)),2)\n    }\n    mn <- mean(as.numeric(d[,q]))\n    sd <- sd(as.numeric(d[,q]))\n    v <- var(as.numeric(d[,q]))\n  }\n  \n  if(file.exists(fname_v)){\n    write.table(v,file=fname_v,sep=\";\",row.names=F,append=T,col.names=F)\n  }else{\n    write.table(v,file=fname_v,sep=\";\",row.names=F,col.names=F)\n  }\n  \n  #resave file\n  write.table(d,file=fname,sep=\";\",row.names=F)\n  \n  n<-nrow(d)\n  #return list\n  r<- list(data=d,dist=dist,mean=mn,sd=sd,var=v,n=n,type=0,demodist=demodist,message=\"OK\")\n  return(r)\n  \n}\n\n###################\n# DELETE\n#\n#  @dir - [povinna, text] adresa souboru, ktery chcete vymazat nejcasteji \"/home/opencpu/data/xxxx.csv\"\n#\n#  #############################\n\ndelete <- function(dir=NULL){\n\n  if(is.null(dir)){\n    er <- list(type=1,message=\"You have not provided a filename\")\n    return(er)\n  }else{\n    if(file.exists(dir)){\n      res<-try(file.remove(dir),silent=T)\n      if(inherits(res,\"try-error\")){\n        res<-list(type=3,\"Failed to remove the file. Dunno what is wrong.\")\n      }else{\n        res<-list(type=0,message=\"File removed\")\n      }\n      return(res)\n    }else{\n      er <- list(type=2,message=\"The file you are trying to delete do not exist\")\n      return(er)\n    }\n  }\n}\n",
    "created" : 1416474666580.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2264767659",
    "id" : "70804A17",
    "lastKnownWriteTime" : 1417168228,
    "path" : "P:/08_Inovace/R/opencpu/adaptiveIquest/R/adaptiveIquest.R",
    "project_path" : "R/adaptiveIquest.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}